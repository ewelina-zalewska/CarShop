/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as OrderImport } from "./routes/order";
import { Route as OptionsImport } from "./routes/options";
import { Route as FormWrapperImport } from "./routes/_formWrapper";
import { Route as SplatImport } from "./routes/$";
import { Route as IndexImport } from "./routes/index";
import { Route as OptionsIndexImport } from "./routes/options/index";
import { Route as OrderOrderIdImport } from "./routes/order/$orderId";
import { Route as OptionsNewImport } from "./routes/options/new";
import { Route as OptionsCategoryImport } from "./routes/options/category";
import { Route as OptionsSplatImport } from "./routes/options/$";
import { Route as FormWrapperCreatorImport } from "./routes/_formWrapper/creator";
import { Route as FormWrapperCreatorIndexImport } from "./routes/_formWrapper/creator/index";
import { Route as OptionsCategoryCategoryIdImport } from "./routes/options/category/$categoryId";
import { Route as FormWrapperCreatorWrongplaceImport } from "./routes/_formWrapper/creator/wrongplace";
import { Route as FormWrapperCreatorSuccessImport } from "./routes/_formWrapper/creator/success";
import { Route as FormWrapperCreatorOrderdataImport } from "./routes/_formWrapper/creator/orderdata";
import { Route as FormWrapperCreatorCategoryIdImport } from "./routes/_formWrapper/creator/$categoryId";
import { Route as FormWrapperCreatorSplatImport } from "./routes/_formWrapper/creator/$";
import { Route as OptionsCategoryCategoryIdNewPartImport } from "./routes/options/category/$categoryId.newPart";
import { Route as OptionsCategoryCategoryIdDeleteImport } from "./routes/options/category/$categoryId.delete";
import { Route as OptionsCategoryCategoryIdPartIdImport } from "./routes/options/category/$categoryId.$partId";
import { Route as FormWrapperCreatorSuccessOrderIdImport } from "./routes/_formWrapper/creator/success/$orderId";
import { Route as FormWrapperCreatorSuccessOrderIdDeleteImport } from "./routes/_formWrapper/creator/success/$orderId.delete";

// Create/Update Routes

const OrderRoute = OrderImport.update({
	id: "/order",
	path: "/order",
	getParentRoute: () => rootRoute,
} as any);

const OptionsRoute = OptionsImport.update({
	id: "/options",
	path: "/options",
	getParentRoute: () => rootRoute,
} as any);

const FormWrapperRoute = FormWrapperImport.update({
	id: "/_formWrapper",
	getParentRoute: () => rootRoute,
} as any);

const SplatRoute = SplatImport.update({
	id: "/$",
	path: "/$",
	getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => rootRoute,
} as any);

const OptionsIndexRoute = OptionsIndexImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => OptionsRoute,
} as any);

const OrderOrderIdRoute = OrderOrderIdImport.update({
	id: "/$orderId",
	path: "/$orderId",
	getParentRoute: () => OrderRoute,
} as any).lazy(() =>
	import("./routes/order/$orderId.lazy").then((d) => d.Route),
);

const OptionsNewRoute = OptionsNewImport.update({
	id: "/new",
	path: "/new",
	getParentRoute: () => OptionsRoute,
} as any);

const OptionsCategoryRoute = OptionsCategoryImport.update({
	id: "/category",
	path: "/category",
	getParentRoute: () => OptionsRoute,
} as any).lazy(() =>
	import("./routes/options/category.lazy").then((d) => d.Route),
);

const OptionsSplatRoute = OptionsSplatImport.update({
	id: "/$",
	path: "/$",
	getParentRoute: () => OptionsRoute,
} as any);

const FormWrapperCreatorRoute = FormWrapperCreatorImport.update({
	id: "/creator",
	path: "/creator",
	getParentRoute: () => FormWrapperRoute,
} as any);

const FormWrapperCreatorIndexRoute = FormWrapperCreatorIndexImport.update({
	id: "/",
	path: "/",
	getParentRoute: () => FormWrapperCreatorRoute,
} as any);

const OptionsCategoryCategoryIdRoute = OptionsCategoryCategoryIdImport.update({
	id: "/$categoryId",
	path: "/$categoryId",
	getParentRoute: () => OptionsCategoryRoute,
} as any).lazy(() =>
	import("./routes/options/category/$categoryId.lazy").then((d) => d.Route),
);

const FormWrapperCreatorWrongplaceRoute =
	FormWrapperCreatorWrongplaceImport.update({
		id: "/wrongplace",
		path: "/wrongplace",
		getParentRoute: () => FormWrapperCreatorRoute,
	} as any);

const FormWrapperCreatorSuccessRoute = FormWrapperCreatorSuccessImport.update({
	id: "/success",
	path: "/success",
	getParentRoute: () => FormWrapperCreatorRoute,
} as any);

const FormWrapperCreatorOrderdataRoute =
	FormWrapperCreatorOrderdataImport.update({
		id: "/orderdata",
		path: "/orderdata",
		getParentRoute: () => FormWrapperCreatorRoute,
	} as any);

const FormWrapperCreatorCategoryIdRoute =
	FormWrapperCreatorCategoryIdImport.update({
		id: "/$categoryId",
		path: "/$categoryId",
		getParentRoute: () => FormWrapperCreatorRoute,
	} as any).lazy(() =>
		import("./routes/_formWrapper/creator/$categoryId.lazy").then(
			(d) => d.Route,
		),
	);

const FormWrapperCreatorSplatRoute = FormWrapperCreatorSplatImport.update({
	id: "/$",
	path: "/$",
	getParentRoute: () => FormWrapperCreatorRoute,
} as any);

const OptionsCategoryCategoryIdNewPartRoute =
	OptionsCategoryCategoryIdNewPartImport.update({
		id: "/newPart",
		path: "/newPart",
		getParentRoute: () => OptionsCategoryCategoryIdRoute,
	} as any);

const OptionsCategoryCategoryIdDeleteRoute =
	OptionsCategoryCategoryIdDeleteImport.update({
		id: "/delete",
		path: "/delete",
		getParentRoute: () => OptionsCategoryCategoryIdRoute,
	} as any);

const OptionsCategoryCategoryIdPartIdRoute =
	OptionsCategoryCategoryIdPartIdImport.update({
		id: "/$partId",
		path: "/$partId",
		getParentRoute: () => OptionsCategoryCategoryIdRoute,
	} as any);

const FormWrapperCreatorSuccessOrderIdRoute =
	FormWrapperCreatorSuccessOrderIdImport.update({
		id: "/$orderId",
		path: "/$orderId",
		getParentRoute: () => FormWrapperCreatorSuccessRoute,
	} as any).lazy(() =>
		import("./routes/_formWrapper/creator/success/$orderId.lazy").then(
			(d) => d.Route,
		),
	);

const FormWrapperCreatorSuccessOrderIdDeleteRoute =
	FormWrapperCreatorSuccessOrderIdDeleteImport.update({
		id: "/delete",
		path: "/delete",
		getParentRoute: () => FormWrapperCreatorSuccessOrderIdRoute,
	} as any).lazy(() =>
		import("./routes/_formWrapper/creator/success/$orderId.delete.lazy").then(
			(d) => d.Route,
		),
	);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexImport;
			parentRoute: typeof rootRoute;
		};
		"/$": {
			id: "/$";
			path: "/$";
			fullPath: "/$";
			preLoaderRoute: typeof SplatImport;
			parentRoute: typeof rootRoute;
		};
		"/_formWrapper": {
			id: "/_formWrapper";
			path: "";
			fullPath: "";
			preLoaderRoute: typeof FormWrapperImport;
			parentRoute: typeof rootRoute;
		};
		"/options": {
			id: "/options";
			path: "/options";
			fullPath: "/options";
			preLoaderRoute: typeof OptionsImport;
			parentRoute: typeof rootRoute;
		};
		"/order": {
			id: "/order";
			path: "/order";
			fullPath: "/order";
			preLoaderRoute: typeof OrderImport;
			parentRoute: typeof rootRoute;
		};
		"/_formWrapper/creator": {
			id: "/_formWrapper/creator";
			path: "/creator";
			fullPath: "/creator";
			preLoaderRoute: typeof FormWrapperCreatorImport;
			parentRoute: typeof FormWrapperImport;
		};
		"/options/$": {
			id: "/options/$";
			path: "/$";
			fullPath: "/options/$";
			preLoaderRoute: typeof OptionsSplatImport;
			parentRoute: typeof OptionsImport;
		};
		"/options/category": {
			id: "/options/category";
			path: "/category";
			fullPath: "/options/category";
			preLoaderRoute: typeof OptionsCategoryImport;
			parentRoute: typeof OptionsImport;
		};
		"/options/new": {
			id: "/options/new";
			path: "/new";
			fullPath: "/options/new";
			preLoaderRoute: typeof OptionsNewImport;
			parentRoute: typeof OptionsImport;
		};
		"/order/$orderId": {
			id: "/order/$orderId";
			path: "/$orderId";
			fullPath: "/order/$orderId";
			preLoaderRoute: typeof OrderOrderIdImport;
			parentRoute: typeof OrderImport;
		};
		"/options/": {
			id: "/options/";
			path: "/";
			fullPath: "/options/";
			preLoaderRoute: typeof OptionsIndexImport;
			parentRoute: typeof OptionsImport;
		};
		"/_formWrapper/creator/$": {
			id: "/_formWrapper/creator/$";
			path: "/$";
			fullPath: "/creator/$";
			preLoaderRoute: typeof FormWrapperCreatorSplatImport;
			parentRoute: typeof FormWrapperCreatorImport;
		};
		"/_formWrapper/creator/$categoryId": {
			id: "/_formWrapper/creator/$categoryId";
			path: "/$categoryId";
			fullPath: "/creator/$categoryId";
			preLoaderRoute: typeof FormWrapperCreatorCategoryIdImport;
			parentRoute: typeof FormWrapperCreatorImport;
		};
		"/_formWrapper/creator/orderdata": {
			id: "/_formWrapper/creator/orderdata";
			path: "/orderdata";
			fullPath: "/creator/orderdata";
			preLoaderRoute: typeof FormWrapperCreatorOrderdataImport;
			parentRoute: typeof FormWrapperCreatorImport;
		};
		"/_formWrapper/creator/success": {
			id: "/_formWrapper/creator/success";
			path: "/success";
			fullPath: "/creator/success";
			preLoaderRoute: typeof FormWrapperCreatorSuccessImport;
			parentRoute: typeof FormWrapperCreatorImport;
		};
		"/_formWrapper/creator/wrongplace": {
			id: "/_formWrapper/creator/wrongplace";
			path: "/wrongplace";
			fullPath: "/creator/wrongplace";
			preLoaderRoute: typeof FormWrapperCreatorWrongplaceImport;
			parentRoute: typeof FormWrapperCreatorImport;
		};
		"/options/category/$categoryId": {
			id: "/options/category/$categoryId";
			path: "/$categoryId";
			fullPath: "/options/category/$categoryId";
			preLoaderRoute: typeof OptionsCategoryCategoryIdImport;
			parentRoute: typeof OptionsCategoryImport;
		};
		"/_formWrapper/creator/": {
			id: "/_formWrapper/creator/";
			path: "/";
			fullPath: "/creator/";
			preLoaderRoute: typeof FormWrapperCreatorIndexImport;
			parentRoute: typeof FormWrapperCreatorImport;
		};
		"/_formWrapper/creator/success/$orderId": {
			id: "/_formWrapper/creator/success/$orderId";
			path: "/$orderId";
			fullPath: "/creator/success/$orderId";
			preLoaderRoute: typeof FormWrapperCreatorSuccessOrderIdImport;
			parentRoute: typeof FormWrapperCreatorSuccessImport;
		};
		"/options/category/$categoryId/$partId": {
			id: "/options/category/$categoryId/$partId";
			path: "/$partId";
			fullPath: "/options/category/$categoryId/$partId";
			preLoaderRoute: typeof OptionsCategoryCategoryIdPartIdImport;
			parentRoute: typeof OptionsCategoryCategoryIdImport;
		};
		"/options/category/$categoryId/delete": {
			id: "/options/category/$categoryId/delete";
			path: "/delete";
			fullPath: "/options/category/$categoryId/delete";
			preLoaderRoute: typeof OptionsCategoryCategoryIdDeleteImport;
			parentRoute: typeof OptionsCategoryCategoryIdImport;
		};
		"/options/category/$categoryId/newPart": {
			id: "/options/category/$categoryId/newPart";
			path: "/newPart";
			fullPath: "/options/category/$categoryId/newPart";
			preLoaderRoute: typeof OptionsCategoryCategoryIdNewPartImport;
			parentRoute: typeof OptionsCategoryCategoryIdImport;
		};
		"/_formWrapper/creator/success/$orderId/delete": {
			id: "/_formWrapper/creator/success/$orderId/delete";
			path: "/delete";
			fullPath: "/creator/success/$orderId/delete";
			preLoaderRoute: typeof FormWrapperCreatorSuccessOrderIdDeleteImport;
			parentRoute: typeof FormWrapperCreatorSuccessOrderIdImport;
		};
	}
}

// Create and export the route tree

interface FormWrapperCreatorSuccessOrderIdRouteChildren {
	FormWrapperCreatorSuccessOrderIdDeleteRoute: typeof FormWrapperCreatorSuccessOrderIdDeleteRoute;
}

const FormWrapperCreatorSuccessOrderIdRouteChildren: FormWrapperCreatorSuccessOrderIdRouteChildren =
	{
		FormWrapperCreatorSuccessOrderIdDeleteRoute:
			FormWrapperCreatorSuccessOrderIdDeleteRoute,
	};

const FormWrapperCreatorSuccessOrderIdRouteWithChildren =
	FormWrapperCreatorSuccessOrderIdRoute._addFileChildren(
		FormWrapperCreatorSuccessOrderIdRouteChildren,
	);

interface FormWrapperCreatorSuccessRouteChildren {
	FormWrapperCreatorSuccessOrderIdRoute: typeof FormWrapperCreatorSuccessOrderIdRouteWithChildren;
}

const FormWrapperCreatorSuccessRouteChildren: FormWrapperCreatorSuccessRouteChildren =
	{
		FormWrapperCreatorSuccessOrderIdRoute:
			FormWrapperCreatorSuccessOrderIdRouteWithChildren,
	};

const FormWrapperCreatorSuccessRouteWithChildren =
	FormWrapperCreatorSuccessRoute._addFileChildren(
		FormWrapperCreatorSuccessRouteChildren,
	);

interface FormWrapperCreatorRouteChildren {
	FormWrapperCreatorSplatRoute: typeof FormWrapperCreatorSplatRoute;
	FormWrapperCreatorCategoryIdRoute: typeof FormWrapperCreatorCategoryIdRoute;
	FormWrapperCreatorOrderdataRoute: typeof FormWrapperCreatorOrderdataRoute;
	FormWrapperCreatorSuccessRoute: typeof FormWrapperCreatorSuccessRouteWithChildren;
	FormWrapperCreatorWrongplaceRoute: typeof FormWrapperCreatorWrongplaceRoute;
	FormWrapperCreatorIndexRoute: typeof FormWrapperCreatorIndexRoute;
}

const FormWrapperCreatorRouteChildren: FormWrapperCreatorRouteChildren = {
	FormWrapperCreatorSplatRoute: FormWrapperCreatorSplatRoute,
	FormWrapperCreatorCategoryIdRoute: FormWrapperCreatorCategoryIdRoute,
	FormWrapperCreatorOrderdataRoute: FormWrapperCreatorOrderdataRoute,
	FormWrapperCreatorSuccessRoute: FormWrapperCreatorSuccessRouteWithChildren,
	FormWrapperCreatorWrongplaceRoute: FormWrapperCreatorWrongplaceRoute,
	FormWrapperCreatorIndexRoute: FormWrapperCreatorIndexRoute,
};

const FormWrapperCreatorRouteWithChildren =
	FormWrapperCreatorRoute._addFileChildren(FormWrapperCreatorRouteChildren);

interface FormWrapperRouteChildren {
	FormWrapperCreatorRoute: typeof FormWrapperCreatorRouteWithChildren;
}

const FormWrapperRouteChildren: FormWrapperRouteChildren = {
	FormWrapperCreatorRoute: FormWrapperCreatorRouteWithChildren,
};

const FormWrapperRouteWithChildren = FormWrapperRoute._addFileChildren(
	FormWrapperRouteChildren,
);

interface OptionsCategoryCategoryIdRouteChildren {
	OptionsCategoryCategoryIdPartIdRoute: typeof OptionsCategoryCategoryIdPartIdRoute;
	OptionsCategoryCategoryIdDeleteRoute: typeof OptionsCategoryCategoryIdDeleteRoute;
	OptionsCategoryCategoryIdNewPartRoute: typeof OptionsCategoryCategoryIdNewPartRoute;
}

const OptionsCategoryCategoryIdRouteChildren: OptionsCategoryCategoryIdRouteChildren =
	{
		OptionsCategoryCategoryIdPartIdRoute: OptionsCategoryCategoryIdPartIdRoute,
		OptionsCategoryCategoryIdDeleteRoute: OptionsCategoryCategoryIdDeleteRoute,
		OptionsCategoryCategoryIdNewPartRoute:
			OptionsCategoryCategoryIdNewPartRoute,
	};

const OptionsCategoryCategoryIdRouteWithChildren =
	OptionsCategoryCategoryIdRoute._addFileChildren(
		OptionsCategoryCategoryIdRouteChildren,
	);

interface OptionsCategoryRouteChildren {
	OptionsCategoryCategoryIdRoute: typeof OptionsCategoryCategoryIdRouteWithChildren;
}

const OptionsCategoryRouteChildren: OptionsCategoryRouteChildren = {
	OptionsCategoryCategoryIdRoute: OptionsCategoryCategoryIdRouteWithChildren,
};

const OptionsCategoryRouteWithChildren = OptionsCategoryRoute._addFileChildren(
	OptionsCategoryRouteChildren,
);

interface OptionsRouteChildren {
	OptionsSplatRoute: typeof OptionsSplatRoute;
	OptionsCategoryRoute: typeof OptionsCategoryRouteWithChildren;
	OptionsNewRoute: typeof OptionsNewRoute;
	OptionsIndexRoute: typeof OptionsIndexRoute;
}

const OptionsRouteChildren: OptionsRouteChildren = {
	OptionsSplatRoute: OptionsSplatRoute,
	OptionsCategoryRoute: OptionsCategoryRouteWithChildren,
	OptionsNewRoute: OptionsNewRoute,
	OptionsIndexRoute: OptionsIndexRoute,
};

const OptionsRouteWithChildren =
	OptionsRoute._addFileChildren(OptionsRouteChildren);

interface OrderRouteChildren {
	OrderOrderIdRoute: typeof OrderOrderIdRoute;
}

const OrderRouteChildren: OrderRouteChildren = {
	OrderOrderIdRoute: OrderOrderIdRoute,
};

const OrderRouteWithChildren = OrderRoute._addFileChildren(OrderRouteChildren);

export interface FileRoutesByFullPath {
	"/": typeof IndexRoute;
	"/$": typeof SplatRoute;
	"": typeof FormWrapperRouteWithChildren;
	"/options": typeof OptionsRouteWithChildren;
	"/order": typeof OrderRouteWithChildren;
	"/creator": typeof FormWrapperCreatorRouteWithChildren;
	"/options/$": typeof OptionsSplatRoute;
	"/options/category": typeof OptionsCategoryRouteWithChildren;
	"/options/new": typeof OptionsNewRoute;
	"/order/$orderId": typeof OrderOrderIdRoute;
	"/options/": typeof OptionsIndexRoute;
	"/creator/$": typeof FormWrapperCreatorSplatRoute;
	"/creator/$categoryId": typeof FormWrapperCreatorCategoryIdRoute;
	"/creator/orderdata": typeof FormWrapperCreatorOrderdataRoute;
	"/creator/success": typeof FormWrapperCreatorSuccessRouteWithChildren;
	"/creator/wrongplace": typeof FormWrapperCreatorWrongplaceRoute;
	"/options/category/$categoryId": typeof OptionsCategoryCategoryIdRouteWithChildren;
	"/creator/": typeof FormWrapperCreatorIndexRoute;
	"/creator/success/$orderId": typeof FormWrapperCreatorSuccessOrderIdRouteWithChildren;
	"/options/category/$categoryId/$partId": typeof OptionsCategoryCategoryIdPartIdRoute;
	"/options/category/$categoryId/delete": typeof OptionsCategoryCategoryIdDeleteRoute;
	"/options/category/$categoryId/newPart": typeof OptionsCategoryCategoryIdNewPartRoute;
	"/creator/success/$orderId/delete": typeof FormWrapperCreatorSuccessOrderIdDeleteRoute;
}

export interface FileRoutesByTo {
	"/": typeof IndexRoute;
	"/$": typeof SplatRoute;
	"": typeof FormWrapperRouteWithChildren;
	"/order": typeof OrderRouteWithChildren;
	"/options/$": typeof OptionsSplatRoute;
	"/options/category": typeof OptionsCategoryRouteWithChildren;
	"/options/new": typeof OptionsNewRoute;
	"/order/$orderId": typeof OrderOrderIdRoute;
	"/options": typeof OptionsIndexRoute;
	"/creator/$": typeof FormWrapperCreatorSplatRoute;
	"/creator/$categoryId": typeof FormWrapperCreatorCategoryIdRoute;
	"/creator/orderdata": typeof FormWrapperCreatorOrderdataRoute;
	"/creator/success": typeof FormWrapperCreatorSuccessRouteWithChildren;
	"/creator/wrongplace": typeof FormWrapperCreatorWrongplaceRoute;
	"/options/category/$categoryId": typeof OptionsCategoryCategoryIdRouteWithChildren;
	"/creator": typeof FormWrapperCreatorIndexRoute;
	"/creator/success/$orderId": typeof FormWrapperCreatorSuccessOrderIdRouteWithChildren;
	"/options/category/$categoryId/$partId": typeof OptionsCategoryCategoryIdPartIdRoute;
	"/options/category/$categoryId/delete": typeof OptionsCategoryCategoryIdDeleteRoute;
	"/options/category/$categoryId/newPart": typeof OptionsCategoryCategoryIdNewPartRoute;
	"/creator/success/$orderId/delete": typeof FormWrapperCreatorSuccessOrderIdDeleteRoute;
}

export interface FileRoutesById {
	__root__: typeof rootRoute;
	"/": typeof IndexRoute;
	"/$": typeof SplatRoute;
	"/_formWrapper": typeof FormWrapperRouteWithChildren;
	"/options": typeof OptionsRouteWithChildren;
	"/order": typeof OrderRouteWithChildren;
	"/_formWrapper/creator": typeof FormWrapperCreatorRouteWithChildren;
	"/options/$": typeof OptionsSplatRoute;
	"/options/category": typeof OptionsCategoryRouteWithChildren;
	"/options/new": typeof OptionsNewRoute;
	"/order/$orderId": typeof OrderOrderIdRoute;
	"/options/": typeof OptionsIndexRoute;
	"/_formWrapper/creator/$": typeof FormWrapperCreatorSplatRoute;
	"/_formWrapper/creator/$categoryId": typeof FormWrapperCreatorCategoryIdRoute;
	"/_formWrapper/creator/orderdata": typeof FormWrapperCreatorOrderdataRoute;
	"/_formWrapper/creator/success": typeof FormWrapperCreatorSuccessRouteWithChildren;
	"/_formWrapper/creator/wrongplace": typeof FormWrapperCreatorWrongplaceRoute;
	"/options/category/$categoryId": typeof OptionsCategoryCategoryIdRouteWithChildren;
	"/_formWrapper/creator/": typeof FormWrapperCreatorIndexRoute;
	"/_formWrapper/creator/success/$orderId": typeof FormWrapperCreatorSuccessOrderIdRouteWithChildren;
	"/options/category/$categoryId/$partId": typeof OptionsCategoryCategoryIdPartIdRoute;
	"/options/category/$categoryId/delete": typeof OptionsCategoryCategoryIdDeleteRoute;
	"/options/category/$categoryId/newPart": typeof OptionsCategoryCategoryIdNewPartRoute;
	"/_formWrapper/creator/success/$orderId/delete": typeof FormWrapperCreatorSuccessOrderIdDeleteRoute;
}

export interface FileRouteTypes {
	fileRoutesByFullPath: FileRoutesByFullPath;
	fullPaths:
		| "/"
		| "/$"
		| ""
		| "/options"
		| "/order"
		| "/creator"
		| "/options/$"
		| "/options/category"
		| "/options/new"
		| "/order/$orderId"
		| "/options/"
		| "/creator/$"
		| "/creator/$categoryId"
		| "/creator/orderdata"
		| "/creator/success"
		| "/creator/wrongplace"
		| "/options/category/$categoryId"
		| "/creator/"
		| "/creator/success/$orderId"
		| "/options/category/$categoryId/$partId"
		| "/options/category/$categoryId/delete"
		| "/options/category/$categoryId/newPart"
		| "/creator/success/$orderId/delete";
	fileRoutesByTo: FileRoutesByTo;
	to:
		| "/"
		| "/$"
		| ""
		| "/order"
		| "/options/$"
		| "/options/category"
		| "/options/new"
		| "/order/$orderId"
		| "/options"
		| "/creator/$"
		| "/creator/$categoryId"
		| "/creator/orderdata"
		| "/creator/success"
		| "/creator/wrongplace"
		| "/options/category/$categoryId"
		| "/creator"
		| "/creator/success/$orderId"
		| "/options/category/$categoryId/$partId"
		| "/options/category/$categoryId/delete"
		| "/options/category/$categoryId/newPart"
		| "/creator/success/$orderId/delete";
	id:
		| "__root__"
		| "/"
		| "/$"
		| "/_formWrapper"
		| "/options"
		| "/order"
		| "/_formWrapper/creator"
		| "/options/$"
		| "/options/category"
		| "/options/new"
		| "/order/$orderId"
		| "/options/"
		| "/_formWrapper/creator/$"
		| "/_formWrapper/creator/$categoryId"
		| "/_formWrapper/creator/orderdata"
		| "/_formWrapper/creator/success"
		| "/_formWrapper/creator/wrongplace"
		| "/options/category/$categoryId"
		| "/_formWrapper/creator/"
		| "/_formWrapper/creator/success/$orderId"
		| "/options/category/$categoryId/$partId"
		| "/options/category/$categoryId/delete"
		| "/options/category/$categoryId/newPart"
		| "/_formWrapper/creator/success/$orderId/delete";
	fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
	IndexRoute: typeof IndexRoute;
	SplatRoute: typeof SplatRoute;
	FormWrapperRoute: typeof FormWrapperRouteWithChildren;
	OptionsRoute: typeof OptionsRouteWithChildren;
	OrderRoute: typeof OrderRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
	IndexRoute: IndexRoute,
	SplatRoute: SplatRoute,
	FormWrapperRoute: FormWrapperRouteWithChildren,
	OptionsRoute: OptionsRouteWithChildren,
	OrderRoute: OrderRouteWithChildren,
};

export const routeTree = rootRoute
	._addFileChildren(rootRouteChildren)
	._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$",
        "/_formWrapper",
        "/options",
        "/order"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$": {
      "filePath": "$.tsx"
    },
    "/_formWrapper": {
      "filePath": "_formWrapper.tsx",
      "children": [
        "/_formWrapper/creator"
      ]
    },
    "/options": {
      "filePath": "options.tsx",
      "children": [
        "/options/$",
        "/options/category",
        "/options/new",
        "/options/"
      ]
    },
    "/order": {
      "filePath": "order.tsx",
      "children": [
        "/order/$orderId"
      ]
    },
    "/_formWrapper/creator": {
      "filePath": "_formWrapper/creator.tsx",
      "parent": "/_formWrapper",
      "children": [
        "/_formWrapper/creator/$",
        "/_formWrapper/creator/$categoryId",
        "/_formWrapper/creator/orderdata",
        "/_formWrapper/creator/success",
        "/_formWrapper/creator/wrongplace",
        "/_formWrapper/creator/"
      ]
    },
    "/options/$": {
      "filePath": "options/$.tsx",
      "parent": "/options"
    },
    "/options/category": {
      "filePath": "options/category.tsx",
      "parent": "/options",
      "children": [
        "/options/category/$categoryId"
      ]
    },
    "/options/new": {
      "filePath": "options/new.tsx",
      "parent": "/options"
    },
    "/order/$orderId": {
      "filePath": "order/$orderId.tsx",
      "parent": "/order"
    },
    "/options/": {
      "filePath": "options/index.tsx",
      "parent": "/options"
    },
    "/_formWrapper/creator/$": {
      "filePath": "_formWrapper/creator/$.tsx",
      "parent": "/_formWrapper/creator"
    },
    "/_formWrapper/creator/$categoryId": {
      "filePath": "_formWrapper/creator/$categoryId.tsx",
      "parent": "/_formWrapper/creator"
    },
    "/_formWrapper/creator/orderdata": {
      "filePath": "_formWrapper/creator/orderdata.tsx",
      "parent": "/_formWrapper/creator"
    },
    "/_formWrapper/creator/success": {
      "filePath": "_formWrapper/creator/success.tsx",
      "parent": "/_formWrapper/creator",
      "children": [
        "/_formWrapper/creator/success/$orderId"
      ]
    },
    "/_formWrapper/creator/wrongplace": {
      "filePath": "_formWrapper/creator/wrongplace.tsx",
      "parent": "/_formWrapper/creator"
    },
    "/options/category/$categoryId": {
      "filePath": "options/category/$categoryId.tsx",
      "parent": "/options/category",
      "children": [
        "/options/category/$categoryId/$partId",
        "/options/category/$categoryId/delete",
        "/options/category/$categoryId/newPart"
      ]
    },
    "/_formWrapper/creator/": {
      "filePath": "_formWrapper/creator/index.tsx",
      "parent": "/_formWrapper/creator"
    },
    "/_formWrapper/creator/success/$orderId": {
      "filePath": "_formWrapper/creator/success/$orderId.tsx",
      "parent": "/_formWrapper/creator/success",
      "children": [
        "/_formWrapper/creator/success/$orderId/delete"
      ]
    },
    "/options/category/$categoryId/$partId": {
      "filePath": "options/category/$categoryId.$partId.tsx",
      "parent": "/options/category/$categoryId"
    },
    "/options/category/$categoryId/delete": {
      "filePath": "options/category/$categoryId.delete.tsx",
      "parent": "/options/category/$categoryId"
    },
    "/options/category/$categoryId/newPart": {
      "filePath": "options/category/$categoryId.newPart.tsx",
      "parent": "/options/category/$categoryId"
    },
    "/_formWrapper/creator/success/$orderId/delete": {
      "filePath": "_formWrapper/creator/success/$orderId.delete.tsx",
      "parent": "/_formWrapper/creator/success/$orderId"
    }
  }
}
ROUTE_MANIFEST_END */
